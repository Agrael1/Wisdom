<?xml version="1.0" encoding="utf-8"?>
<registry>
  <types comment="Type definitions">
    <!--Enums-->
    <type name="Status" category="enum" type="i32" doc="Represents main error communication source for the API.
Compare against {::Ok} for success.">
      <value name="Ok" value="0" doc="Operation succeded."/>
      <value name="Timeout" value="1" doc="Operation timed out. 
Counts as a success value in some cases."/>
      <value name="Partial" value="2" doc="Operation partially succeeded.
Some times it means that core value is initialized,
but some functionality may be missing and may require
you to check if demanded functionality is in place."/>
      <value name="Error" value="-1" doc="Operation failed. Check {Result::error} for more details."/>
      <value name="InvalidArgument" value="-2" doc="One or more arguments, or parts of arguments 
passed to the function were incorrect. Check {Result::error} for more details."/>
      <value name="OutOfMemory" value="-3" doc="There is no more host memory available. 
Allocation with malloc or similar call has failed."/>
      <value name="DeviceLost" value="-4" doc="Device driver was forcefully stopped. 
Most of the time happens on swapchain presentation."/>
      <value name="Occluded" value="-5" doc="Swapchain presentation was not visible to the user.
Rendering is too fast."/>
    </type>
    
    <type name="MutiWaitFlags" category="enum" type="u32"
          doc="Determines the behavior when wait for multiple fences is issued.">
      <value name="All" value="0" doc="All the fences in the batch are triggered."/>
      <value name="Any" value="1" doc="At least one of the fences from the batch is triggered."/>
    </type>
    
    
    <type name="AdapterPreference" category="enum" doc="Oreders the adapters according to preference 
using builtin heuristics of underlying APIs.">
      <impl_type for="dx" name="DXGI_GPU_PREFERENCE" direct="true"/>
      <value name="None" value="0" doc="No particular preference, list adapters in system divised order."/>
      <value name="MinConsumption" value="1" doc="List the adapters from low power consumption to high.
Order is as follows: Integrated, Discrete, External, Software."/>
      <value name="Performance" value="2" doc="List the adapters from high performance to low.
Order is as follows: External, Discrete, Integrated, Software."/>
    </type>

    <type name="Severity" category="enum" doc="Log message severity. 
Used with {DebugCallback::} and internal library logging.">
      <value name="Debug" value="0" doc="Message carries debug information."/>
      <value name="Trace" value="1" doc="Message contains trace point (function call stack info)."/>
      <value name="Info" value="2" doc="Message contains general information."/>
      <value name="Warning" value="3" doc="Message contains warning. 
There is something wrong and it may affect performance or stability of the application."/>
      <value name="Error" value="4" doc="Message contains error. 
Stability of the application is compromized."/>
      <value name="Critical" value="5" doc="Message contains critical error.
The application must be shut down, no further execution."/>
    </type>

    <type name="QueueType" category="enum" type="u32" doc="Type of the queue to create.">
      <value name="Graphics" value="0" doc="Queue is used for graphics operations."/>
      <value name="Compute" value="2" doc="Queue is used for compute operations."/>
      <value name="Copy" value="3" doc="Queue is used for copy operations."/>
      <value name="VideoDecode" value="4" doc="Queue is used for video decoding operations."/>
    </type>

    <type name="ShaderStages" category="enum" type="u32" doc="Shader stages that can be used in the pipeline.
Main use is Root signature and descriptor management.
Stages have no granularity, either all or one can be selected.">
      <impl_type for="dx" name="D3D12_SHADER_VISIBILITY" direct="true"/>
      <impl_type for="vk" name="VkShaderStageFlagBits" default="VK_SHADER_STAGE_ALL"/>
      <value name="All" value="0" doc="All shader stages.">
        <impl name="vk" value="VK_SHADER_STAGE_ALL"/>
      </value>
      <value name="Vertex" value="1" doc="Vertex shader stage.">
        <impl name="vk" value="VK_SHADER_STAGE_VERTEX_BIT"/>
      </value>
      <value name="Hull" value="2" doc="Hull/Tessellation control shader stage.">
        <impl name="vk" value="VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT"/>
      </value>
      <value name="Domain" value="3" doc="Domain/Tessellation evaluation shader stage.">
        <impl name="vk" value="VK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT"/>
      </value>
      <value name="Geometry" value="4" doc="Geometry shader stage.">
        <impl name="vk" value="VK_SHADER_STAGE_GEOMETRY_BIT"/>
      </value>
      <value name="Pixel" value="5" doc="Pixel/Fragment shader stage.">
        <impl name="vk" value="VK_SHADER_STAGE_FRAGMENT_BIT"/>
      </value>
      <value name="Amplification" value="6" doc="Amplification shader stage.">
        <impl name="vk" value="VK_SHADER_STAGE_TASK_BIT_NV"/>
      </value>
      <value name="Mesh" value="7" doc="Mesh shader stage.">
        <impl name="vk" value="VK_SHADER_STAGE_MESH_BIT_NV"/>
      </value>
      <value name="Count" value="8" doc="Number of stages."/>
    </type>

    <!--Bitmasks-->
    <type name="AdapterFlags" category="bitmask">
      <value name="None" value="0"/>
      <value name="Remote" bit="0"/>
      <value name="Software" bit="1"/>
      <value name="ACGCompatible" bit="2" impl="dx"/>
      <value name="SupportsMonitoredFences" bit="3" impl="dx"/>
      <value name="SupportsNonMonitoredFences" bit="4" impl="dx"/>
      <value name="KeyedMutexConformance" bit="5" impl="dx"/>
    </type>
    
    <type name="DSSelect" category="bitmask">
      <value name="None" value="0"/>
      <value name="Depth" bit="0"/>
      <value name="Stencil" bit="1"/>
      <value name="DepthStencil" value="3"/>
    </type>


    
    <type name="DescriptorType" category="enum">
      <impl_type for="dx" name="D3D12_DESCRIPTOR_RANGE_TYPE"/>
      <impl_type for="vk" name="VkDescriptorType"/>
      <value name="ShaderResource" value="0">
        <impl name="vk" value="VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE"/>
        <impl name="dx" value="D3D12_DESCRIPTOR_RANGE_TYPE_SRV"/>
      </value>
      <value name="ConstantBuffer" value="1">
        <impl name="vk" value="VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER"/>
        <impl name="dx" value="D3D12_DESCRIPTOR_RANGE_TYPE_CBV"/>
      </value>
      <value name="UnorderedAccess" value="2">
        <impl name="vk" value="VK_DESCRIPTOR_TYPE_STORAGE_BUFFER"/>
        <impl name="dx" value="D3D12_DESCRIPTOR_RANGE_TYPE_UAV"/>
      </value>
      <value name="Sampler" value="3">
        <impl name="vk" value="VK_DESCRIPTOR_TYPE_SAMPLER"/>
        <impl name="dx" value="D3D12_DESCRIPTOR_RANGE_TYPE_SAMPLER"/>
      </value>
    </type>

    <type name="ColorComponents" category="bitmask">
      <value name="None" value="0"/>
      <value name="R" bit="0"/>
      <value name="G" bit="1"/>
      <value name="B" bit="2"/>
      <value name="A" bit="3"/>
      <value name="All" value="15"/>
    </type>
    <type name="InputClass" category="enum">
      <value name="PerVertex" value="0"/>
      <value name="PerInstance" value="1"/>
    </type>
    <type name="DataFormat" category="enum">
      <impl_type for="dx" name="DXGI_FORMAT" direct="true "/>
      <impl_type for="vk" name="VkFormat"/>
      <value name="Unknown" value="0"/>
      <value name="RGBA32Float" value="2">
        <impl name="vk" value="VK_FORMAT_R32G32B32A32_SFLOAT"/>
      </value>
      <value name="RGBA32Uint" value="3">
        <impl name="vk" value="VK_FORMAT_R32G32B32A32_UINT"/>
      </value>
      <value name="RGBA32Sint" value="4">
        <impl name="vk" value="VK_FORMAT_R32G32B32A32_SINT"/>
      </value>
      <value name="RGB32Float" value="6">
        <impl name="vk" value="VK_FORMAT_R32G32B32_SFLOAT"/>
      </value>
      <value name="RGB32Uint" value="7">
        <impl name="vk" value="VK_FORMAT_R32G32B32_UINT"/>
      </value>
      <value name="RGB32Sint" value="8">
        <impl name="vk" value="VK_FORMAT_R32G32B32_SINT"/>
      </value>
      <value name="RGBA16Float" value="10">
        <impl name="vk" value="VK_FORMAT_R16G16B16A16_SFLOAT"/>
      </value>
      <value name="RGBA16Unorm" value="11">
        <impl name="vk" value="VK_FORMAT_R16G16B16A16_UNORM"/>
      </value>
      <value name="RGBA16Uint" value="12">
        <impl name="vk" value="VK_FORMAT_R16G16B16A16_UINT"/>
      </value>
      <value name="RGBA16Snorm" value="13">
        <impl name="vk" value="VK_FORMAT_R16G16B16A16_SNORM"/>
      </value>
      <value name="RGBA16Sint" value="14">
        <impl name="vk" value="VK_FORMAT_R16G16B16A16_SINT"/>
      </value>
      <value name="RG32Float" value="16">
        <impl name="vk" value="VK_FORMAT_R32G32_SFLOAT"/>
      </value>
      <value name="RG32Uint" value="17">
        <impl name="vk" value="VK_FORMAT_R32G32_UINT"/>
      </value>
      <value name="RG32Sint" value="18">
        <impl name="vk" value="VK_FORMAT_R32G32_SINT"/>
      </value>
      <value name="D32FloatS8Uint" value="20">
        <impl name="vk" value="VK_FORMAT_D32_SFLOAT_S8_UINT"/>
      </value>
      <value name="RGB10A2Unorm" value="24">
        <impl name="vk" value="VK_FORMAT_A2B10G10R10_UNORM_PACK32"/>
      </value>
      <value name="RGB10A2Uint" value="25">
        <impl name="vk" value="VK_FORMAT_A2B10G10R10_UINT_PACK32"/>
      </value>
      <value name="RG11B10Float" value="26">
        <impl name="vk" value="VK_FORMAT_B10G11R11_UFLOAT_PACK32"/>
      </value>
      <value name="RGBA8Unorm" value="28">
        <impl name="vk" value="VK_FORMAT_R8G8B8A8_UNORM"/>
      </value>
      <value name="RGBA8UnormSrgb" value="29">
        <impl name="vk" value="VK_FORMAT_R8G8B8A8_SRGB"/>
      </value>
      <value name="RGBA8Uint" value="30">
        <impl name="vk" value="VK_FORMAT_R8G8B8A8_UINT"/>
      </value>
      <value name="RGBA8Snorm" value="31">
        <impl name="vk" value="VK_FORMAT_R8G8B8A8_SNORM"/>
      </value>
      <value name="RGBA8Sint" value="32">
        <impl name="vk" value="VK_FORMAT_R8G8B8A8_SINT"/>
      </value>
      <value name="RG16Float" value="34">
        <impl name="vk" value="VK_FORMAT_R16G16_SFLOAT"/>
      </value>
      <value name="RG16Unorm" value="35">
        <impl name="vk" value="VK_FORMAT_R16G16_UNORM"/>
      </value>
      <value name="RG16Uint" value="36">
        <impl name="vk" value="VK_FORMAT_R16G16_UINT"/>
      </value>
      <value name="RG16Snorm" value="37">
        <impl name="vk" value="VK_FORMAT_R16G16_SNORM"/>
      </value>
      <value name="RG16Sint" value="38">
        <impl name="vk" value="VK_FORMAT_R16G16_SINT"/>
      </value>
      <value name="D32Float" value="40">
        <impl name="vk" value="VK_FORMAT_D32_SFLOAT"/>
      </value>
      <value name="R32Float" value="41">
        <impl name="vk" value="VK_FORMAT_R32_SFLOAT"/>
      </value>
      <value name="R32Uint" value="42">
        <impl name="vk" value="VK_FORMAT_R32_UINT"/>
      </value>
      <value name="R32Sint" value="43">
        <impl name="vk" value="VK_FORMAT_R32_SINT"/>
      </value>
      <value name="D24UnormS8Uint" value="45">
        <impl name="vk" value="VK_FORMAT_D24_UNORM_S8_UINT"/>
      </value>
      <value name="RG8Unorm" value="49">
        <impl name="vk" value="VK_FORMAT_R8G8_UNORM"/>
      </value>
      <value name="RG8Uint" value="50">
        <impl name="vk" value="VK_FORMAT_R8G8_UINT"/>
      </value>
      <value name="RG8Snorm" value="51">
        <impl name="vk" value="VK_FORMAT_R8G8_SNORM"/>
      </value>
      <value name="RG8Sint" value="52">
        <impl name="vk" value="VK_FORMAT_R8G8_SINT"/>
      </value>
      <value name="R16Float" value="54">
        <impl name="vk" value="VK_FORMAT_R16_SFLOAT"/>
      </value>
      <value name="D16Unorm" value="55">
        <impl name="vk" value="VK_FORMAT_D16_UNORM"/>
      </value>
      <value name="R16Unorm" value="56">
        <impl name="vk" value="VK_FORMAT_R16_UNORM"/>
      </value>
      <value name="R16Uint" value="57">
        <impl name="vk" value="VK_FORMAT_R16_UINT"/>
      </value>
      <value name="R16Snorm" value="58">
        <impl name="vk" value="VK_FORMAT_R16_SNORM"/>
      </value>
      <value name="R16Sint" value="59">
        <impl name="vk" value="VK_FORMAT_R16_SINT"/>
      </value>
      <value name="R8Unorm" value="61">
        <impl name="vk" value="VK_FORMAT_R8_UNORM"/>
      </value>
      <value name="R8Uint" value="62">
        <impl name="vk" value="VK_FORMAT_R8_UINT"/>
      </value>
      <value name="R8Snorm" value="63">
        <impl name="vk" value="VK_FORMAT_R8_SNORM"/>
      </value>
      <value name="R8Sint" value="64">
        <impl name="vk" value="VK_FORMAT_R8_SINT"/>
      </value>
      <value name="RGB9E5UFloat" value="67">
        <impl name="vk" value="VK_FORMAT_E5B9G9R9_UFLOAT_PACK32"/>
      </value>
      <value name="RG8BG8Unorm" value="68">
        <impl name="vk" value="VK_FORMAT_B8G8R8G8_422_UNORM"/>
      </value>
      <value name="GR8GB8Unorm" value="69">
        <impl name="vk" value="VK_FORMAT_G8B8G8R8_422_UNORM"/>
      </value>
      <value name="BC1RGBAUnorm" value="71">
        <impl name="vk" value="VK_FORMAT_BC1_RGBA_UNORM_BLOCK"/>
      </value>
      <value name="BC1RGBAUnormSrgb" value="72">
        <impl name="vk" value="VK_FORMAT_BC1_RGBA_SRGB_BLOCK"/>
      </value>
      <value name="BC2RGBAUnorm" value="74">
        <impl name="vk" value="VK_FORMAT_BC2_UNORM_BLOCK"/>
      </value>
      <value name="BC2RGBAUnormSrgb" value="75">
        <impl name="vk" value="VK_FORMAT_BC2_SRGB_BLOCK"/>
      </value>
      <value name="BC3RGBAUnorm" value="77">
        <impl name="vk" value="VK_FORMAT_BC3_UNORM_BLOCK"/>
      </value>
      <value name="BC3RGBAUnormSrgb" value="78">
        <impl name="vk" value="VK_FORMAT_BC3_SRGB_BLOCK"/>
      </value>
      <value name="BC4RUnorm" value="80">
        <impl name="vk" value="VK_FORMAT_BC4_UNORM_BLOCK"/>
      </value>
      <value name="BC4RSnorm" value="81">
        <impl name="vk" value="VK_FORMAT_BC4_SNORM_BLOCK"/>
      </value>
      <value name="BC5RGUnorm" value="83">
        <impl name="vk" value="VK_FORMAT_BC5_UNORM_BLOCK"/>
      </value>
      <value name="BC5RGSnorm" value="84">
        <impl name="vk" value="VK_FORMAT_BC5_SNORM_BLOCK"/>
      </value>
      <value name="B5R6G5Unorm" value="85">
        <impl name="vk" value="VK_FORMAT_B5G6R5_UNORM_PACK16"/>
      </value>
      <value name="B5G5R5A1Unorm" value="86">
        <impl name="vk" value="VK_FORMAT_B5G5R5A1_UNORM_PACK16"/>
      </value>
      <value name="BGRA8Unorm" value="87">
        <impl name="vk" value="VK_FORMAT_B8G8R8A8_UNORM"/>
      </value>
      <value name="BGRA8UnormSrgb" value="91">
        <impl name="vk" value="VK_FORMAT_B8G8R8A8_SRGB"/>
      </value>
      <value name="BC6HUfloat16" value="95">
        <impl name="vk" value="VK_FORMAT_BC6H_UFLOAT_BLOCK"/>
      </value>
      <value name="BC6HSfloat16" value="96">
        <impl name="vk" value="VK_FORMAT_BC6H_SFLOAT_BLOCK"/>
      </value>
      <value name="BC7RGBAUnorm" value="98">
        <impl name="vk" value="VK_FORMAT_BC7_UNORM_BLOCK"/>
      </value>
      <value name="BC7RGBAUnormSrgb" value="99">
        <impl name="vk" value="VK_FORMAT_BC7_SRGB_BLOCK"/>
      </value>
    </type>
    <type name="FillMode" category="enum">
      <impl_type for="dx" name="D3D12_FILL_MODE" direct="true"/>
      <impl_type for="vk" name="VkPolygonMode"/>
      <value name="Lines" value="2">
        <impl name="vk" value="VK_POLYGON_MODE_LINE"/>
      </value>
      <value name="Solid" value="3">
        <impl name="vk" value="VK_POLYGON_MODE_FILL"/>
      </value>
    </type>
    <type name="CullMode" category="enum">
      <impl_type for="dx" name="D3D12_CULL_MODE" direct="true"/>
      <impl_type for="vk" name="VkCullModeFlags"/>
      <value name="None" value="1">
        <impl name="vk" value="VK_CULL_MODE_NONE"/>
      </value>
      <value name="Front" value="2">
        <impl name="vk" value="VK_CULL_MODE_FRONT_BIT"/>
      </value>
      <value name="Back" value="3">
        <impl name="vk" value="VK_CULL_MODE_BACK_BIT"/>
      </value>
    </type>
    <type name="WindingOrder" category="enum">
      <impl_type for="dx" name="BOOL" direct="true"/>
      <impl_type for="vk" name="VkFrontFace"/>
      <value name="Clockwise" value="0">
        <impl name="vk" value="VK_FRONT_FACE_CLOCKWISE"/>
      </value>
      <value name="CounterClockwise" value="1">
        <impl name="vk" value="VK_FRONT_FACE_COUNTER_CLOCKWISE"/>
      </value>
    </type>
    <type name="SampleRate" category="enum">
      <impl_type for="dx" name="uint32_t" direct="true"/>
      <impl_type for="vk" name="VkSampleCountFlagBits"/>
      <value name="S1" value="1">
        <impl name="vk" value="VK_SAMPLE_COUNT_1_BIT"/>
      </value>
      <value name="S2" value="2">
        <impl name="vk" value="VK_SAMPLE_COUNT_2_BIT"/>
      </value>
      <value name="S4" value="4">
        <impl name="vk" value="VK_SAMPLE_COUNT_4_BIT"/>
      </value>
      <value name="S8" value="8">
        <impl name="vk" value="VK_SAMPLE_COUNT_8_BIT"/>
      </value>
      <value name="S16" value="16">
        <impl name="vk" value="VK_SAMPLE_COUNT_16_BIT"/>
      </value>
    </type>
    <type name="Compare" category="enum">
      <impl_type for="dx" name="D3D12_COMPARISON_FUNC" direct="true"/>
      <impl_type for="vk" name="VkCompareOp"/>
      <value name="None" value="0">
        <impl name="vk" value="VK_COMPARE_OP_NEVER"/>
      </value>
      <value name="Never" value="1">
        <impl name="vk" value="VK_COMPARE_OP_NEVER"/>
      </value>
      <value name="Less" value="2">
        <impl name="vk" value="VK_COMPARE_OP_LESS"/>
      </value>
      <value name="Equal" value="3">
        <impl name="vk" value="VK_COMPARE_OP_EQUAL"/>
      </value>
      <value name="LessEqual" value="4">
        <impl name="vk" value="VK_COMPARE_OP_LESS_OR_EQUAL"/>
      </value>
      <value name="Greater" value="5">
        <impl name="vk" value="VK_COMPARE_OP_GREATER"/>
      </value>
      <value name="NotEqual" value="6">
        <impl name="vk" value="VK_COMPARE_OP_NOT_EQUAL"/>
      </value>
      <value name="GreaterEqual" value="7">
        <impl name="vk" value="VK_COMPARE_OP_GREATER_OR_EQUAL"/>
      </value>
      <value name="Always" value="8">
        <impl name="vk" value="VK_COMPARE_OP_ALWAYS"/>
      </value>
    </type>
    <type name="StencilOp" category="enum">
      <impl_type for="dx" name="D3D12_STENCIL_OP" direct="true"/>
      <impl_type for="vk" name="VkStencilOp"/>
      <value name="Keep" value="1">
        <impl name="vk" value="VK_STENCIL_OP_KEEP"/>
      </value>
      <value name="Zero" value="2">
        <impl name="vk" value="VK_STENCIL_OP_ZERO"/>
      </value>
      <value name="Replace" value="3">
        <impl name="vk" value="VK_STENCIL_OP_REPLACE"/>
      </value>
      <value name="IncClamp" value="4">
        <impl name="vk" value="VK_STENCIL_OP_INCREMENT_AND_CLAMP"/>
      </value>
      <value name="DecClamp" value="5">
        <impl name="vk" value="VK_STENCIL_OP_DECREMENT_AND_CLAMP"/>
      </value>
      <value name="Invert" value="6">
        <impl name="vk" value="VK_STENCIL_OP_INVERT"/>
      </value>
      <value name="IncWrap" value="7">
        <impl name="vk" value="VK_STENCIL_OP_INCREMENT_AND_WRAP"/>
      </value>
      <value name="DecWrap" value="8">
        <impl name="vk" value="VK_STENCIL_OP_DECREMENT_AND_WRAP"/>
      </value>
    </type>
    <type name="BlendFactor" category="enum">
      <impl_type for="dx" name="D3D12_BLEND" direct="true"/>
      <impl_type for="vk" name="VkBlendFactor"/>
      <value name="Zero" value="1">
        <impl name="vk" value="VK_BLEND_FACTOR_ZERO"/>
      </value>
      <value name="One" value="2">
        <impl name="vk" value="VK_BLEND_FACTOR_ONE"/>
      </value>
      <value name="SrcColor" value="3">
        <impl name="vk" value="VK_BLEND_FACTOR_SRC_COLOR"/>
      </value>
      <value name="InvSrcColor" value="4">
        <impl name="vk" value="VK_BLEND_FACTOR_ONE_MINUS_SRC_COLOR"/>
      </value>
      <value name="SrcAlpha" value="5">
        <impl name="vk" value="VK_BLEND_FACTOR_SRC_ALPHA"/>
      </value>
      <value name="InvSrcAlpha" value="6">
        <impl name="vk" value="VK_BLEND_FACTOR_ONE_MINUS_SRC_ALPHA"/>
      </value>
      <value name="DestAlpha" value="7">
        <impl name="vk" value="VK_BLEND_FACTOR_DST_ALPHA"/>
      </value>
      <value name="InvDestAlpha" value="8">
        <impl name="vk" value="VK_BLEND_FACTOR_ONE_MINUS_DST_ALPHA"/>
      </value>
      <value name="DestColor" value="9">
        <impl name="vk" value="VK_BLEND_FACTOR_DST_COLOR"/>
      </value>
      <value name="InvDestColor" value="10">
        <impl name="vk" value="VK_BLEND_FACTOR_ONE_MINUS_DST_COLOR"/>
      </value>
      <value name="SrcAlphaSat" value="11">
        <impl name="vk" value="VK_BLEND_FACTOR_SRC_ALPHA_SATURATE"/>
      </value>
      <value name="BlendFactor" value="14">
        <impl name="vk" value="VK_BLEND_FACTOR_CONSTANT_COLOR"/>
      </value>
      <value name="InvBlendFactor" value="15">
        <impl name="vk" value="VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_COLOR"/>
      </value>
      <value name="Src1Color" value="16">
        <impl name="vk" value="VK_BLEND_FACTOR_SRC1_COLOR"/>
      </value>
      <value name="InvSrc1Color" value="17">
        <impl name="vk" value="VK_BLEND_FACTOR_ONE_MINUS_SRC1_COLOR"/>
      </value>
      <value name="Src1Alpha" value="18">
        <impl name="vk" value="VK_BLEND_FACTOR_SRC1_ALPHA"/>
      </value>
      <value name="InvSrc1Alpha" value="19">
        <impl name="vk" value="VK_BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA"/>
      </value>
    </type>
    <type name="BlendOp" category="enum">
      <impl_type for="dx" name="D3D12_BLEND_OP" direct="true"/>
      <impl_type for="vk" name="VkBlendOp"/>
      <value name="Add" value="1">
        <impl name="vk" value="VK_BLEND_OP_ADD"/>
      </value>
      <value name="Subtract" value="2">
        <impl name="vk" value="VK_BLEND_OP_SUBTRACT"/>
      </value>
      <value name="RevSubtract" value="3">
        <impl name="vk" value="VK_BLEND_OP_REVERSE_SUBTRACT"/>
      </value>
      <value name="Min" value="4">
        <impl name="vk" value="VK_BLEND_OP_MIN"/>
      </value>
      <value name="Max" value="5">
        <impl name="vk" value="VK_BLEND_OP_MAX"/>
      </value>
    </type>
    <type name="LogicOp" category="enum">
      <impl_type for="dx" name="D3D12_LOGIC_OP" direct="true"/>
      <impl_type for="vk" name="VkLogicOp"/>
      <value name="Clear" value="0">
        <impl name="vk" value="VK_LOGIC_OP_CLEAR"/>
      </value>
      <value name="Set" value="1">
        <impl name="vk" value="VK_LOGIC_OP_SET"/>
      </value>
      <value name="Copy" value="2">
        <impl name="vk" value="VK_LOGIC_OP_COPY"/>
      </value>
      <value name="CopyInverted" value="3">
        <impl name="vk" value="VK_LOGIC_OP_COPY_INVERTED"/>
      </value>
      <value name="Noop" value="4">
        <impl name="vk" value="VK_LOGIC_OP_NO_OP"/>
      </value>
      <value name="Invert" value="5">
        <impl name="vk" value="VK_LOGIC_OP_INVERT"/>
      </value>
      <value name="And" value="6">
        <impl name="vk" value="VK_LOGIC_OP_AND"/>
      </value>
      <value name="Nand" value="7">
        <impl name="vk" value="VK_LOGIC_OP_NAND"/>
      </value>
      <value name="Or" value="8">
        <impl name="vk" value="VK_LOGIC_OP_OR"/>
      </value>
      <value name="Nor" value="9">
        <impl name="vk" value="VK_LOGIC_OP_NOR"/>
      </value>
      <value name="Xor" value="10">
        <impl name="vk" value="VK_LOGIC_OP_XOR"/>
      </value>
      <value name="Equiv" value="11">
        <impl name="vk" value="VK_LOGIC_OP_EQUIVALENT"/>
      </value>
      <value name="AndReverse" value="12">
        <impl name="vk" value="VK_LOGIC_OP_AND_REVERSE"/>
      </value>
      <value name="AndInverted" value="13">
        <impl name="vk" value="VK_LOGIC_OP_AND_INVERTED"/>
      </value>
      <value name="OrReverse" value="14">
        <impl name="vk" value="VK_LOGIC_OP_OR_REVERSE"/>
      </value>
      <value name="OrInverted" value="15">
        <impl name="vk" value="VK_LOGIC_OP_OR_INVERTED"/>
      </value>
    </type>

    <type name="BufferUsage" category="bitmask">
      <value name="None" value="0"/>
      <value name="CopySrc" bit="0"/>
      <value name="CopyDst" bit="1"/>
      <value name="ConstantBuffer" bit="4"/>
      <value name="IndexBuffer" bit="6"/>
      <value name="VertexBuffer" bit="7"/>
    </type>

    <type name="MemoryFlags" category="bitmask">
      <impl_type for="vk" name="VmaAllocationCreateFlags"/>
      <impl_type for="dx" name="D3D12MA::ALLOCATION_FLAGS"/>
      <value name="None" value="0"/>
      <value name="DedicatedAllocation" bit="0">
        <impl name="vk" value="VMA_ALLOCATION_CREATE_DEDICATED_MEMORY_BIT"/>
        <impl name="dx" value="D3D12MA::ALLOCATION_FLAG_COMMITTED"/>
      </value>
      <value name="Mapped" bit="1">
        <impl name="vk" value="VMA_ALLOCATION_CREATE_MAPPED_BIT"/>
        <impl name="dx" value="D3D12MA::ALLOCATION_FLAG_NONE"/>
      </value>
    </type>

    <type name="MemoryType" category="enum">
      <impl_type for="dx" name="D3D12_HEAP_TYPE"/>
      <impl_type for="vk" name="VkMemoryPropertyFlags"/>
      <value name="Default" value="0">
        <impl name="dx" value="D3D12_HEAP_TYPE_DEFAULT"/>
        <impl name="vk" value="VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT"/>
      </value>
      <value name="Upload" value="1">
        <impl name="dx" value="D3D12_HEAP_TYPE_UPLOAD"/>
        <impl name="vk" value="VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT"/>
      </value>
      <value name="Readback" value="2">
        <impl name="dx" value="D3D12_HEAP_TYPE_READBACK"/>
        <impl name="vk" value="VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_CACHED_BIT"/>
      </value>
      <value name="GPUUpload" value="3">
        <impl name="dx" value="D3D12_HEAP_TYPE_GPU_UPLOAD"/>
        <impl name="vk" value="VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT | VK_MEMORY_PROPERTY_HOST_COHERENT_BIT"/>
      </value>
    </type>

    <type name="BarrierSync" category="bitmask">
      <impl_type for="dx" name="D3D12_BARRIER_SYNC"/>
      <impl_type for="vk" name="VkPipelineStageFlags2"/>
      <value name="None" value="0"/>
      <value name="All" bit="0">
        <impl name="dx" value="D3D12_BARRIER_SYNC_ALL"/>
        <impl name="vk" value="VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT"/>
      </value>
      <value name="Draw" bit="1">
        <impl name="dx" value="D3D12_BARRIER_SYNC_DRAW"/>
        <impl name="vk" value="VK_PIPELINE_STAGE_2_VERTEX_ATTRIBUTE_INPUT_BIT|VK_PIPELINE_STAGE_2_INDEX_INPUT_BIT|VK_PIPELINE_STAGE_2_VERTEX_SHADER_BIT|VK_PIPELINE_STAGE_2_FRAGMENT_SHADER_BIT|VK_PIPELINE_STAGE_2_EARLY_FRAGMENT_TESTS_BIT | VK_PIPELINE_STAGE_2_LATE_FRAGMENT_TESTS_BIT|VK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT"/>
      </value>
      <value name="IndexInput" bit="2">
        <impl name="dx" value="D3D12_BARRIER_SYNC_INDEX_INPUT"/>
        <impl name="vk" value="VK_PIPELINE_STAGE_2_INDEX_INPUT_BIT"/>
      </value>
      <value name="VertexShading" bit="3">
        <impl name="dx" value="D3D12_BARRIER_SYNC_VERTEX_SHADING"/>
        <impl name="vk" value="VK_PIPELINE_STAGE_2_VERTEX_SHADER_BIT"/>
      </value>
      <value name="PixelShading" bit="4">
        <impl name="dx" value="D3D12_BARRIER_SYNC_PIXEL_SHADING"/>
        <impl name="vk" value="VK_PIPELINE_STAGE_2_FRAGMENT_SHADER_BIT"/>
      </value>
      <value name="DepthStencil" bit="5">
        <impl name="dx" value="D3D12_BARRIER_SYNC_DEPTH_STENCIL"/>
        <impl name="vk" value="VK_PIPELINE_STAGE_2_EARLY_FRAGMENT_TESTS_BIT | VK_PIPELINE_STAGE_2_LATE_FRAGMENT_TESTS_BIT"/>
      </value>
      <value name="RenderTarget" bit="6">
        <impl name="dx" value="D3D12_BARRIER_SYNC_RENDER_TARGET"/>
        <impl name="vk" value="VK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT"/>
      </value>
      <value name="Compute" bit="7">
        <impl name="dx" value="D3D12_BARRIER_SYNC_COMPUTE_SHADING"/>
        <impl name="vk" value="VK_PIPELINE_STAGE_2_COMPUTE_SHADER_BIT"/>
      </value>
      <value name="Raytracing" bit="8">
        <impl name="dx" value="D3D12_BARRIER_SYNC_RAYTRACING"/>
        <impl name="vk" value="VK_PIPELINE_STAGE_2_RAY_TRACING_SHADER_BIT_KHR"/>
      </value>
      <value name="Copy" bit="9">
        <impl name="dx" value="D3D12_BARRIER_SYNC_COPY"/>
        <impl name="vk" value="VK_PIPELINE_STAGE_2_COPY_BIT"/>
      </value>
      <value name="Resolve" bit="10">
        <impl name="dx" value="D3D12_BARRIER_SYNC_RESOLVE"/>
        <impl name="vk" value="VK_PIPELINE_STAGE_2_COPY_BIT | VK_PIPELINE_STAGE_2_FRAGMENT_SHADER_BIT | VK_PIPELINE_STAGE_2_RESOLVE_BIT | VK_PIPELINE_STAGE_2_COMPUTE_SHADER_BIT"/>
      </value>
      <value name="ExecuteIndirect" bit="11">
        <impl name="dx" value="D3D12_BARRIER_SYNC_EXECUTE_INDIRECT"/>
        <impl name="vk" value="VK_PIPELINE_STAGE_2_DRAW_INDIRECT_BIT | VK_PIPELINE_STAGE_2_COMPUTE_SHADER_BIT"/>
      </value>
      <value name="AllShading" bit="12">
        <impl name="dx" value="D3D12_BARRIER_SYNC_ALL_SHADING"/>
        <impl name="vk" value="VK_PIPELINE_STAGE_2_VERTEX_SHADER_BIT | VK_PIPELINE_STAGE_2_FRAGMENT_SHADER_BIT | VK_PIPELINE_STAGE_2_COMPUTE_SHADER_BIT"/>
      </value>
      <value name="NonPixelShading" bit="13">
        <impl name="dx" value="D3D12_BARRIER_SYNC_NON_PIXEL_SHADING"/>
        <impl name="vk" value="VK_PIPELINE_STAGE_2_VERTEX_SHADER_BIT | VK_PIPELINE_STAGE_2_COMPUTE_SHADER_BIT"/>
      </value>
      <value name="ClearUAV" bit="14">
        <impl name="dx" value="D3D12_BARRIER_SYNC_CLEAR_UNORDERED_ACCESS_VIEW"/>
        <impl name="vk" value="VK_PIPELINE_STAGE_2_COMPUTE_SHADER_BIT"/>
      </value>
      <value name="VideoDecode" bit="15">
        <impl name="dx" value="D3D12_BARRIER_SYNC_VIDEO_DECODE"/>
        <impl name="vk" value="VK_PIPELINE_STAGE_2_VIDEO_DECODE_BIT_KHR"/>
      </value>
      <value name="VideoEncode" bit="16">
        <impl name="dx" value="D3D12_BARRIER_SYNC_VIDEO_ENCODE"/>
        <impl name="vk" value="VK_PIPELINE_STAGE_2_VIDEO_ENCODE_BIT_KHR"/>
      </value>
      <value name="BuildRTAS" bit="17">
        <impl name="dx" value="D3D12_BARRIER_SYNC_BUILD_RAYTRACING_ACCELERATION_STRUCTURE"/>
        <impl name="vk" value="VK_PIPELINE_STAGE_2_ACCELERATION_STRUCTURE_BUILD_BIT_KHR"/>
      </value>
      <value name="CopyRTAS" bit="18">
        <impl name="dx" value="D3D12_BARRIER_SYNC_COPY_RAYTRACING_ACCELERATION_STRUCTURE"/>
        <impl name="vk" value="VK_PIPELINE_STAGE_2_ACCELERATION_STRUCTURE_COPY_BIT_KHR"/>
      </value>
    </type>

    <type name="ResourceAccess" category="bitmask">
      <impl_type for="dx" name="D3D12_BARRIER_ACCESS"/>
      <impl_type for="vk" name="VkAccessFlags2"/>
      <value name="Common" value="0">
        <impl name="dx" value="D3D12_BARRIER_ACCESS_COMMON"/>
        <impl name="vk" value="VK_ACCESS_2_MEMORY_READ_BIT | VK_ACCESS_2_MEMORY_WRITE_BIT"/>
      </value>
      <value name="VertexBuffer" bit="0">
        <impl name="dx" value="D3D12_BARRIER_ACCESS_VERTEX_BUFFER"/>
        <impl name="vk" value="VK_ACCESS_2_VERTEX_ATTRIBUTE_READ_BIT"/>
      </value>
      <value name="ConstantBuffer" bit="1">
        <impl name="dx" value="D3D12_BARRIER_ACCESS_CONSTANT_BUFFER"/>
        <impl name="vk" value="VK_ACCESS_2_UNIFORM_READ_BIT"/>
      </value>
      <value name="IndexBuffer" bit="2">
        <impl name="dx" value="D3D12_BARRIER_ACCESS_INDEX_BUFFER"/>
        <impl name="vk" value="VK_ACCESS_2_INDEX_READ_BIT"/>
      </value>
      <value name="RenderTarget" bit="3">
        <impl name="dx" value="D3D12_BARRIER_ACCESS_RENDER_TARGET"/>
        <impl name="vk" value="VK_ACCESS_2_COLOR_ATTACHMENT_WRITE_BIT"/>
      </value>
      <value name="UnorderedAccess" bit="4">
        <impl name="dx" value="D3D12_BARRIER_ACCESS_UNORDERED_ACCESS"/>
        <impl name="vk" value="VK_ACCESS_2_SHADER_WRITE_BIT | VK_ACCESS_2_SHADER_READ_BIT"/>
      </value>
      <value name="DepthWrite" bit="5">
        <impl name="dx" value="D3D12_BARRIER_ACCESS_DEPTH_STENCIL_WRITE"/>
        <impl name="vk" value="VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT"/>
      </value>
      <value name="DepthRead" bit="6">
        <impl name="dx" value="D3D12_BARRIER_ACCESS_DEPTH_STENCIL_READ"/>
        <impl name="vk" value="VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_READ_BIT"/>
      </value>
      <value name="ShaderResource" bit="7">
        <impl name="dx" value="D3D12_BARRIER_ACCESS_SHADER_RESOURCE"/>
        <impl name="vk" value="VK_ACCESS_2_SHADER_READ_BIT"/>
      </value>
      <value name="StreamOutput" bit="8">
        <impl name="dx" value="D3D12_BARRIER_ACCESS_STREAM_OUTPUT"/>
        <impl name="vk" value="VK_ACCESS_2_TRANSFORM_FEEDBACK_WRITE_BIT_EXT"/>
      </value>
      <value name="IndirectArgument" bit="9">
        <impl name="dx" value="D3D12_BARRIER_ACCESS_INDIRECT_ARGUMENT"/>
        <impl name="vk" value="VK_ACCESS_2_INDIRECT_COMMAND_READ_BIT | VK_ACCESS_2_SHADER_READ_BIT"/>
      </value>
      <value name="CopyDest" bit="10">
        <impl name="dx" value="D3D12_BARRIER_ACCESS_COPY_DEST"/>
        <impl name="vk" value="VK_ACCESS_2_TRANSFER_WRITE_BIT"/>
      </value>
      <value name="CopySource" bit="11">
        <impl name="dx" value="D3D12_BARRIER_ACCESS_COPY_SOURCE"/>
        <impl name="vk" value="VK_ACCESS_2_TRANSFER_READ_BIT"/>
      </value>
      <value name="ConditionalRendering" bit="12">
        <impl name="dx" value="D3D12_BARRIER_ACCESS_PREDICATION"/>
        <impl name="vk" value="VK_ACCESS_2_CONDITIONAL_RENDERING_READ_BIT_EXT"/>
      </value>
      <value name="AccelerationStrucureRead" bit="13">
        <impl name="dx" value="D3D12_BARRIER_ACCESS_RAYTRACING_ACCELERATION_STRUCTURE_READ"/>
        <impl name="vk" value="VK_ACCESS_2_ACCELERATION_STRUCTURE_READ_BIT_KHR"/>
      </value>
      <value name="AccelerationStrucureWrite" bit="14">
        <impl name="dx" value="D3D12_BARRIER_ACCESS_RAYTRACING_ACCELERATION_STRUCTURE_WRITE"/>
        <impl name="vk" value="VK_ACCESS_2_ACCELERATION_STRUCTURE_WRITE_BIT_KHR"/>
      </value>
      <value name="ShadingRate" bit="15">
        <impl name="dx" value="D3D12_BARRIER_ACCESS_SHADING_RATE_SOURCE"/>
        <impl name="vk" value="VK_ACCESS_2_FRAGMENT_SHADING_RATE_ATTACHMENT_READ_BIT_KHR"/>
      </value>
      <value name="VideoDecodeRead" bit="16">
        <impl name="dx" value="D3D12_BARRIER_ACCESS_VIDEO_DECODE_READ"/>
        <impl name="vk" value="VK_ACCESS_2_VIDEO_DECODE_READ_BIT_KHR"/>
      </value>
      <value name="VideoDecodeWrite" bit="17">
        <impl name="dx" value="D3D12_BARRIER_ACCESS_VIDEO_DECODE_WRITE"/>
        <impl name="vk" value="VK_ACCESS_2_VIDEO_DECODE_WRITE_BIT_KHR"/>
      </value>
      <value name="Present" bit="18">
        <impl name="dx" value="D3D12_BARRIER_ACCESS_VIDEO_DECODE_WRITE"/>
        <impl name="vk" value="VK_ACCESS_2_VIDEO_DECODE_WRITE_BIT_KHR"/>
      </value>
      <value name="ResolveDest" bit="19">
        <impl name="dx" value="D3D12_BARRIER_ACCESS_RESOLVE_DEST"/>
        <impl name="vk" value="VK_ACCESS_2_TRANSFER_WRITE_BIT | VK_ACCESS_2_SHADER_WRITE_BIT"/>
      </value>
      <value name="ResolveSource" bit="20">
        <impl name="dx" value="D3D12_BARRIER_ACCESS_RESOLVE_SOURCE"/>
        <impl name="vk" value="VK_ACCESS_2_TRANSFER_READ_BIT | VK_ACCESS_2_SHADER_READ_BIT"/>
      </value>
      <value name="NoAccess" bit="31">
        <impl name="dx" value="D3D12_BARRIER_ACCESS_NO_ACCESS"/>
        <impl name="vk" value="VK_ACCESS_2_NONE"/>
      </value>
    </type>

    <type name="ShaderIntermediate" category="enum">
      <value name="DXIL" value="0"/>
      <value name="SPIRV" value="1"/>
    </type>

    <type name="TextureState" category="enum" type="u32">
      <impl_type for="dx" name="D3D12_BARRIER_LAYOUT"/>
      <impl_type for="vk" name="VkImageLayout"/>
      <value name="Undefined" value="4294967295">
        <impl name="dx" value="D3D12_BARRIER_LAYOUT_UNDEFINED"/>
        <impl name="vk" value="VK_IMAGE_LAYOUT_UNDEFINED"/>
      </value>
      <value name="Common" value="0">
        <impl name="dx" value="D3D12_BARRIER_LAYOUT_COMMON"/>
        <impl name="vk" value="VK_IMAGE_LAYOUT_GENERAL"/>
      </value>
      <value name="Read" value="1">
        <impl name="dx" value="D3D12_BARRIER_LAYOUT_GENERIC_READ"/>
        <impl name="vk" value="VK_IMAGE_LAYOUT_READ_ONLY_OPTIMAL"/>
      </value>
      <value name="RenderTarget" value="2">
        <impl name="dx" value="D3D12_BARRIER_LAYOUT_RENDER_TARGET"/>
        <impl name="vk" value="VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL"/>
      </value>
      <value name="UnorderedAccess" value="3">
        <impl name="dx" value="D3D12_BARRIER_LAYOUT_UNORDERED_ACCESS"/>
        <impl name="vk" value="VK_IMAGE_LAYOUT_ATTACHMENT_OPTIMAL"/>
      </value>
      <value name="DepthStencilWrite" value="4">
        <impl name="dx" value="D3D12_BARRIER_LAYOUT_DEPTH_STENCIL_WRITE"/>
        <impl name="vk" value="VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL"/>
      </value>
      <value name="DepthStencilRead" value="5">
        <impl name="dx" value="D3D12_BARRIER_LAYOUT_DEPTH_STENCIL_READ"/>
        <impl name="vk" value="VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL"/>
      </value>
      <value name="ShaderResource" value="6">
        <impl name="dx" value="D3D12_BARRIER_LAYOUT_SHADER_RESOURCE"/>
        <impl name="vk" value="VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL"/>
      </value>
      <value name="CopySource" value="7">
        <impl name="dx" value="D3D12_BARRIER_LAYOUT_COPY_SOURCE"/>
        <impl name="vk" value="VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL"/>
      </value>
      <value name="CopyDest" value="8">
        <impl name="dx" value="D3D12_BARRIER_LAYOUT_COPY_DEST"/>
        <impl name="vk" value="VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL"/>
      </value>
      <value name="Present" value="9">
        <impl name="dx" value="D3D12_BARRIER_LAYOUT_PRESENT"/>
        <impl name="vk" value="VK_IMAGE_LAYOUT_PRESENT_SRC_KHR"/>
      </value>
      <value name="ShadingRate" value="10">
        <impl name="dx" value="D3D12_BARRIER_LAYOUT_SHADING_RATE_SOURCE"/>
        <impl name="vk" value="VK_IMAGE_LAYOUT_FRAGMENT_SHADING_RATE_ATTACHMENT_OPTIMAL_KHR"/>
      </value>
      <value name="VideoDecodeRead" value="11">
        <impl name="dx" value="D3D12_BARRIER_LAYOUT_VIDEO_DECODE_READ"/>
        <impl name="vk" value="VK_IMAGE_LAYOUT_VIDEO_DECODE_SRC_KHR"/>
      </value>
      <value name="VideoDecodeWrite" value="12">
        <impl name="dx" value="D3D12_BARRIER_LAYOUT_VIDEO_DECODE_WRITE"/>
        <impl name="vk" value="VK_IMAGE_LAYOUT_VIDEO_DECODE_DST_KHR"/>
      </value>
    </type>

    <type name="TextureLayout" category="enum">
      <value name="Texture1D" value="2"/>
      <value name="Texture1DArray" value="3"/>
      <value name="Texture2D" value="4"/>
      <value name="Texture2DArray" value="5"/>
      <value name="Texture2DMS" value="6"/>
      <value name="Texture2DMSArray" value="7"/>
      <value name="Texture3D" value="8"/>
    </type>

    <type name="RenderPassFlags" category="bitmask">
      <impl_type for="vk" name="VkRenderingFlags"/>
      <impl_type for="dx" name="D3D12_RENDER_PASS_FLAGS"/>
      <value name="None" value="0"/>
      <value name="Suspending" bit="1">
        <impl name="dx" value="D3D12_RENDER_PASS_FLAG_SUSPENDING_PASS"/>
        <impl name="vk" value="VK_RENDERING_SUSPENDING_BIT"/>
      </value>
      <value name="Resuming" bit="2">
        <impl name="dx" value="D3D12_RENDER_PASS_FLAG_RESUMING_PASS"/>
        <impl name="vk" value="VK_RENDERING_RESUMING_BIT"/>
      </value>
    </type>

    <type name="DescriptorHeapType" category="enum">
      <impl_type for="dx" name="D3D12_DESCRIPTOR_HEAP_TYPE" direct="true"/>
      <value name="Descriptor" value="0"/>
      <value name="Sampler" value="1"/>
    </type>

    <type name="DescriptorMemory" category="enum">
      <impl_type for="dx" name="D3D12_DESCRIPTOR_HEAP_FLAGS" direct="true"/>
      <value name="CpuOnly" value="0"/>
      <value name="ShaderVisible" value="1"/>
    </type>

    <type name="LoadOperation" category="enum">
      <impl_type for="vk" name="VkAttachmentLoadOp"/>
      <impl_type for="dx" name="D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE"/>
      <value name="Load" value="0">
        <impl name="dx" value="D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE_PRESERVE"/>
        <impl name="vk" value="VK_ATTACHMENT_LOAD_OP_LOAD"/>
      </value>
      <value name="Clear" value="1">
        <impl name="dx" value="D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE_CLEAR"/>
        <impl name="vk" value="VK_ATTACHMENT_LOAD_OP_CLEAR"/>
      </value>
      <value name="DontCare" value="2">
        <impl name="dx" value="D3D12_RENDER_PASS_BEGINNING_ACCESS_TYPE_DISCARD"/>
        <impl name="vk" value="VK_ATTACHMENT_LOAD_OP_DONT_CARE"/>
      </value>
    </type>
    <type name="StoreOperation" category="enum">
      <impl_type for="vk" name="VkAttachmentStoreOp"/>
      <impl_type for="dx" name="D3D12_RENDER_PASS_ENDING_ACCESS_TYPE"/>
      <value name="Store" value="0">
        <impl name="dx" value="D3D12_RENDER_PASS_ENDING_ACCESS_TYPE_PRESERVE"/>
        <impl name="vk" value="VK_ATTACHMENT_STORE_OP_STORE"/>
      </value>
      <value name="DontCare" value="1">
        <impl name="dx" value="D3D12_RENDER_PASS_ENDING_ACCESS_TYPE_DISCARD"/>
        <impl name="vk" value="VK_ATTACHMENT_STORE_OP_DONT_CARE"/>
      </value>
      <value name="Resolve" value="2">
        <impl name="dx" value="D3D12_RENDER_PASS_ENDING_ACCESS_TYPE_RESOLVE"/>
        <impl name="vk" value="VK_ATTACHMENT_STORE_OP_STORE"/>
      </value>
    </type>

    <type name="PrimitiveTopology" category="enum">
      <impl_type for="dx" name="D3D_PRIMITIVE_TOPOLOGY"/>
      <impl_type for="vk" name="VkPrimitiveTopology"/>
      <value name="PointList" value="1">
        <impl name="dx" value="D3D_PRIMITIVE_TOPOLOGY_POINTLIST"/>
        <impl name="vk" value="VK_PRIMITIVE_TOPOLOGY_POINT_LIST"/>
      </value>
      <value name="LineList" value="2">
        <impl name="dx" value="D3D_PRIMITIVE_TOPOLOGY_LINELIST"/>
        <impl name="vk" value="VK_PRIMITIVE_TOPOLOGY_LINE_LIST"/>
      </value>
      <value name="LineStrip" value="3">
        <impl name="dx" value="D3D_PRIMITIVE_TOPOLOGY_LINESTRIP"/>
        <impl name="vk" value="VK_PRIMITIVE_TOPOLOGY_LINE_STRIP"/>
      </value>
      <value name="TriangleList" value="4">
        <impl name="dx" value="D3D_PRIMITIVE_TOPOLOGY_TRIANGLELIST"/>
        <impl name="vk" value="VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST"/>
      </value>
      <value name="TriangleStrip" value="5">
        <impl name="dx" value="D3D_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP"/>
        <impl name="vk" value="VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP"/>
      </value>
      <value name="TriangleFan" value="6">
        <impl name="dx" value="D3D_PRIMITIVE_TOPOLOGY_TRIANGLEFAN"/>
        <impl name="vk" value="VK_PRIMITIVE_TOPOLOGY_TRIANGLE_FAN"/>
      </value>
      <value name="LineListAdj" value="10">
        <impl name="dx" value="D3D_PRIMITIVE_TOPOLOGY_LINELIST_ADJ"/>
        <impl name="vk" value="VK_PRIMITIVE_TOPOLOGY_LINE_LIST_WITH_ADJACENCY"/>
      </value>
      <value name="LineStripAdj" value="11">
        <impl name="dx" value="D3D_PRIMITIVE_TOPOLOGY_LINESTRIP_ADJ"/>
        <impl name="vk" value="VK_PRIMITIVE_TOPOLOGY_LINE_STRIP_WITH_ADJACENCY"/>
      </value>
      <value name="TriangleListAdj" value="12">
        <impl name="dx" value="D3D_PRIMITIVE_TOPOLOGY_TRIANGLELIST_ADJ"/>
        <impl name="vk" value="VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY"/>
      </value>
      <value name="TriangleStripAdj" value="13">
        <impl name="dx" value="D3D_PRIMITIVE_TOPOLOGY_TRIANGLESTRIP_ADJ"/>
        <impl name="vk" value="VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP_WITH_ADJACENCY"/>
      </value>
    </type>

    <type name="TopologyType" category="enum">
      <impl_type for="dx" name="D3D12_PRIMITIVE_TOPOLOGY_TYPE"/>
      <impl_type for="vk" name="VkPrimitiveTopology"/>
      <value name="Point" value="1">
        <impl name="dx" value="D3D12_PRIMITIVE_TOPOLOGY_TYPE_POINT"/>
        <impl name="vk" value="VK_PRIMITIVE_TOPOLOGY_POINT_LIST"/>
      </value>
      <value name="Line" value="2">
        <impl name="dx" value="D3D12_PRIMITIVE_TOPOLOGY_TYPE_LINE"/>
        <impl name="vk" value="VK_PRIMITIVE_TOPOLOGY_LINE_LIST"/>
      </value>
      <value name="Triangle" value="3">
        <impl name="dx" value="D3D12_PRIMITIVE_TOPOLOGY_TYPE_TRIANGLE"/>
        <impl name="vk" value="VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST"/>
      </value>
      <value name="Patch" value="4">
        <impl name="dx" value="D3D12_PRIMITIVE_TOPOLOGY_TYPE_PATCH"/>
        <impl name="vk" value="VK_PRIMITIVE_TOPOLOGY_PATCH_LIST"/>
      </value>
    </type>

    <type name="SampleCount" category="enum">
      <impl_type for="dx" name="uint32_t" direct="true"/>
      <impl_type for="vk" name="VkSampleCountFlagBits"/>
      <value name="S1" value="1">
        <impl name="vk" value="VK_SAMPLE_COUNT_1_BIT"/>
      </value>
      <value name="S2" value="2">
        <impl name="vk" value="VK_SAMPLE_COUNT_2_BIT"/>
      </value>
      <value name="S4" value="4">
        <impl name="vk" value="VK_SAMPLE_COUNT_4_BIT"/>
      </value>
      <value name="S8" value="8">
        <impl name="vk" value="VK_SAMPLE_COUNT_8_BIT"/>
      </value>
      <value name="S16" value="16">
        <impl name="vk" value="VK_SAMPLE_COUNT_16_BIT"/>
      </value>
      <value name="S32" value="32">
        <impl name="vk" value="VK_SAMPLE_COUNT_32_BIT"/>
      </value>
      <value name="S64" value="64">
        <impl name="vk" value="VK_SAMPLE_COUNT_64_BIT"/>
      </value>
    </type>

    <type name="TextureUsage" category="bitmask">
      <impl_type for="dx" name="D3D12_RESOURCE_FLAGS"/>
      <impl_type for="vk" name="VkImageUsageFlags"/>
      <value name="None" value="0">
        <impl name="dx" value="D3D12_RESOURCE_FLAG_NONE"/>
      </value>
      <value name="RenderTarget" bit="0">
        <impl name="dx" value="D3D12_RESOURCE_FLAG_ALLOW_RENDER_TARGET"/>
        <impl name="vk" value="VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT"/>
      </value>
      <value name="DepthStencil" bit="1">
        <impl name="dx" value="D3D12_RESOURCE_FLAG_ALLOW_DEPTH_STENCIL"/>
        <impl name="vk" value="VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT"/>
      </value>
      <value name="CopySrc" bit="2">
        <impl name="dx" value="D3D12_RESOURCE_FLAG_NONE"/>
        <impl name="vk" value="VK_IMAGE_USAGE_TRANSFER_SRC_BIT"/>
      </value>
      <value name="CopyDst" bit="3">
        <impl name="dx" value="D3D12_RESOURCE_FLAG_NONE"/>
        <impl name="vk" value="VK_IMAGE_USAGE_TRANSFER_DST_BIT"/>
      </value>
      <value name="ShaderResource" bit="4">
        <impl name="dx" value="D3D12_RESOURCE_FLAG_NONE"/>
        <impl name="vk" value="VK_IMAGE_USAGE_SAMPLED_BIT"/>
      </value>
      <value name="UnorderedAccess" bit="5">
        <impl name="dx" value="D3D12_RESOURCE_FLAG_ALLOW_UNORDERED_ACCESS"/>
        <impl name="vk" value="VK_IMAGE_USAGE_STORAGE_BIT"/>
      </value>
      <value name="HostCopy" bit="7">
        <impl name="dx" value="D3D12_RESOURCE_FLAG_NONE"/>
        <impl name="vk" value="VK_IMAGE_USAGE_HOST_TRANSFER_BIT_EXT"/>
      </value>
    </type>

    <type name="Filter" category="enum">
      <impl_type for="vk" name="VkFilter"/>
      <impl_type for="dx" name="D3D12_FILTER_TYPE"/>
      <value name="Point" value="0">
        <impl name="vk" value="VK_FILTER_NEAREST"/>
        <impl name="dx" value="D3D12_FILTER_TYPE_POINT"/>
      </value>
      <value name="Linear" value="1">
        <impl name="vk" value="VK_FILTER_LINEAR"/>
        <impl name="dx" value="D3D12_FILTER_TYPE_LINEAR"/>
      </value>
    </type>

    <type name="AddressMode" category="enum">
      <impl_type for="vk" name="VkSamplerAddressMode"/>
      <impl_type for="dx" name="D3D12_TEXTURE_ADDRESS_MODE"/>
      <value name="Repeat" value="0">
        <impl name="vk" value="VK_SAMPLER_ADDRESS_MODE_REPEAT"/>
        <impl name="dx" value="D3D12_TEXTURE_ADDRESS_MODE_WRAP"/>
      </value>
      <value name="MirroredRepeat" value="1">
        <impl name="vk" value="VK_SAMPLER_ADDRESS_MODE_MIRRORED_REPEAT"/>
        <impl name="dx" value="D3D12_TEXTURE_ADDRESS_MODE_MIRROR"/>
      </value>
      <value name="ClampToEdge" value="2">
        <impl name="vk" value="VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE"/>
        <impl name="dx" value="D3D12_TEXTURE_ADDRESS_MODE_CLAMP"/>
      </value>
      <value name="ClampToBorder" value="3">
        <impl name="vk" value="VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER"/>
        <impl name="dx" value="D3D12_TEXTURE_ADDRESS_MODE_BORDER"/>
      </value>
      <value name="MirrorClampToEdge" value="4">
        <impl name="vk" value="VK_SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE"/>
        <impl name="dx" value="D3D12_TEXTURE_ADDRESS_MODE_MIRROR_ONCE"/>
      </value>
    </type>

    <type name="TextureViewType" category="enum">
      <impl_type for="vk" name="VkImageViewType"/>
      <impl_type for="dx" name="D3D12_SRV_DIMENSION"/>
      <value name="Texture1D" value="0">
        <impl name="vk" value="VK_IMAGE_VIEW_TYPE_1D"/>
        <impl name="dx" value="D3D12_SRV_DIMENSION_TEXTURE1D"/>
      </value>
      <value name="Texture1DArray" value="1">
        <impl name="vk" value="VK_IMAGE_VIEW_TYPE_1D_ARRAY"/>
        <impl name="dx" value="D3D12_SRV_DIMENSION_TEXTURE1DARRAY"/>
      </value>
      <value name="Texture2D" value="2">
        <impl name="vk" value="VK_IMAGE_VIEW_TYPE_2D"/>
        <impl name="dx" value="D3D12_SRV_DIMENSION_TEXTURE2D"/>
      </value>
      <value name="Texture2DArray" value="3">
        <impl name="vk" value="VK_IMAGE_VIEW_TYPE_2D_ARRAY"/>
        <impl name="dx" value="D3D12_SRV_DIMENSION_TEXTURE2DARRAY"/>
      </value>
      <value name="Texture2DMS" value="4">
        <impl name="vk" value="VK_IMAGE_VIEW_TYPE_2D"/>
        <impl name="dx" value="D3D12_SRV_DIMENSION_TEXTURE2DMS"/>
      </value>
      <value name="Texture2DMSArray" value="5">
        <impl name="vk" value="VK_IMAGE_VIEW_TYPE_2D_ARRAY"/>
        <impl name="dx" value="D3D12_SRV_DIMENSION_TEXTURE2DMSARRAY"/>
      </value>
      <value name="Texture3D" value="6">
        <impl name="vk" value="VK_IMAGE_VIEW_TYPE_3D"/>
        <impl name="dx" value="D3D12_SRV_DIMENSION_TEXTURE3D"/>
      </value>
      <value name="TextureCube" value="7">
        <impl name="vk" value="VK_IMAGE_VIEW_TYPE_CUBE"/>
        <impl name="dx" value="D3D12_SRV_DIMENSION_TEXTURECUBE"/>
      </value>
      <value name="TextureCubeArray" value="8">
        <impl name="vk" value="VK_IMAGE_VIEW_TYPE_CUBE_ARRAY"/>
        <impl name="dx" value="D3D12_SRV_DIMENSION_TEXTURECUBEARRAY"/>
      </value>
    </type>

    <type name="ComponentSwizzle" category="enum" type="u8">
      <impl_type for="dx" name="D3D12_SHADER_COMPONENT_MAPPING" direct="true"/>
      <impl_type for="vk" name="VkComponentSwizzle"/>
      <value name="Red" value="0">
        <impl name="vk" value="VK_COMPONENT_SWIZZLE_R"/>
      </value>
      <value name="Green" value="1">
        <impl name="vk" value="VK_COMPONENT_SWIZZLE_G"/>
      </value>
      <value name="Blue" value="2">
        <impl name="vk" value="VK_COMPONENT_SWIZZLE_B"/>
      </value>
      <value name="Alpha" value="3">
        <impl name="vk" value="VK_COMPONENT_SWIZZLE_A"/>
      </value>
      <value name="Zero" value="4">
        <impl name="vk" value="VK_COMPONENT_SWIZZLE_ZERO"/>
      </value>
      <value name="One" value="5">
        <impl name="vk" value="VK_COMPONENT_SWIZZLE_ONE"/>
      </value>
    </type>
  </types>
</registry>
