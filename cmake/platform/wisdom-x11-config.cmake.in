@PACKAGE_INIT@

include(CMakeFindDependencyMacro)
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_CURRENT_LIST_DIR}/ECM")
find_dependency(X11)

if(X11_FOUND)
	include( "${CMAKE_CURRENT_LIST_DIR}/wisdom-x11-targets.cmake" )
	add_alias_target(wis::x11 wis::wisdom-x11)
	add_alias_target(wis::x11-headers wis::wisdom-x11-headers)

	if(WISDOM_CPP_MODULES_SUPPORTED)
		include( "${CMAKE_CURRENT_LIST_DIR}/wisdom-x11-module-targets.cmake" )
		add_alias_target(wis::x11-module wis::wisdom-x11-module)
	endif()
else()
	add_library(wisdom-x11 INTERFACE) # Dummy target
	add_library(wisdom-x11-headers INTERFACE) # Dummy target

	add_library(wis::wisdom-x11 ALIAS wisdom-x11)
	add_library(wis::wisdom-x11-headers ALIAS wisdom-x11-headers)

	if (WISDOM_CPP_MODULES_SUPPORTED)
		add_library(wisdom-x11-module INTERFACE) # Dummy target
		add_library(wis::wisdom-x11-module ALIAS wisdom-x11-module)
	endif()

	message(STATUS "x11 not found, skipping x11 targets")
endif()
