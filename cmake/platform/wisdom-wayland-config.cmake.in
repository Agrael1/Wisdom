@PACKAGE_INIT@

include(CMakeFindDependencyMacro)

set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_CURRENT_LIST_DIR}/ECM")
find_dependency(Wayland)

if(Wayland_FOUND)
	include( "${CMAKE_CURRENT_LIST_DIR}/wisdom-wayland-targets.cmake" )
	add_alias_target(wis::wayland wis::wisdom-wayland)
	add_alias_target(wis::wayland-headers wis::wisdom-wayland-headers)

	if(WISDOM_CPP_MODULES_SUPPORTED)
		include( "${CMAKE_CURRENT_LIST_DIR}/wisdom-wayland-module-targets.cmake" )
		add_alias_target(wis::wayland-module wis::wisdom-wayland-module)
	endif()
else()
	add_library(wisdom-wayland INTERFACE) # Dummy target
	add_library(wisdom-wayland-headers INTERFACE) # Dummy target

	add_library(wis::wisdom-wayland ALIAS wisdom-wayland)
	add_library(wis::wisdom-wayland-headers ALIAS wisdom-wayland-headers)

	if (WISDOM_CPP_MODULES_SUPPORTED)
		add_library(wisdom-wayland-module INTERFACE) # Dummy target
		add_library(wis::wisdom-wayland-module ALIAS wisdom-wayland-module)
	endif()

	message(STATUS "Wayland not found, skipping wayland targets")
endif()
