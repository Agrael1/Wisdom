<?xml version="1.0" encoding="UTF-8"?>
<registry>
  <handles>
    <handle name="Factory"/>
    <handle name="Adapter"/>
    <handle name="Device"/>
    <handle name="Fence"/>
    <handle name="ResourceAllocator"/>
    <handle name="RootSignature"/>
    <handle name="CommandQueue"/>
    <handle name="Shader"/>
    <handle name="PipelineState"/>
    <handle name="RenderPass"/>
  </handles>
  <types comment="Type definitions">
    <!--Enums-->
    <type name="Status" category="enum" type="i32">
      <value name="Ok" value="0"/>
      <value name="Timeout" value="1"/>
      <value name="Error" value="-1"/>
      <value name="InvalidArgument" value="-2"/>
      <value name="OutOfMemory" value="-3"/>
      <value name="DeviceLost" value="-4"/>
    </type>
    <type name="MutiWaitFlags" category="enum" type="u32">
      <value name="All" value="0"/>
      <value name="Any" value="1"/>
    </type>
    <type name="AdapterPreference" category="enum">
      <impl_type for="dx" name="DXGI_GPU_PREFERENCE" direct="true"/>
      <value name="None" value="0"/>
      <value name="MinConsumption" value="1"/>
      <value name="Performance" value="2"/>
    </type>
    <type name="AdapterFlags" category="bitmask">
      <value name="None" value="0"/>
      <value name="Remote" bit="0"/>
      <value name="Software" bit="1"/>
      <value name="ACGCompatible" bit="2" impl="dx"/>
      <value name="SupportsMonitoredFences" bit="3" impl="dx"/>
      <value name="SupportsNonMonitoredFences" bit="4" impl="dx"/>
      <value name="KeyedMutexConformance" bit="5" impl="dx"/>
    </type>
    <type name="Severity" category="enum">
      <value name="Debug" value="0"/>
      <value name="Trace" value="1"/>
      <value name="Info" value="2"/>
      <value name="Warning" value="3"/>
      <value name="Error" value="4"/>
      <value name="Critical" value="5"/>
    </type>
    <type name="QueueType" category="enum" type="u32">
      <value name="Graphics" value="0"/>
      <value name="Bundle" value="1" impl="dx"/>
      <value name="Compute" value="2"/>
      <value name="Copy" value="3"/>
      <value name="VideoDecode" value="4"/>
      <value name="VideoProcess" value="5" impl="dx"/>
      <value name="VideoEncode" value="6" impl="dx"/>
    </type>
    <type name="ShaderStages" category="enum">
      <impl_type for="dx" name="D3D12_SHADER_VISIBILITY" direct="true"/>
      <impl_type for="vk" name="VkShaderStageFlagBits" default="VK_SHADER_STAGE_ALL"/>
      <value name="All" value="0">
        <impl name="vk" value="VK_SHADER_STAGE_ALL"/>
      </value>
      <value name="Vertex" value="1">
        <impl name="vk" value="VK_SHADER_STAGE_VERTEX_BIT"/>
      </value>
      <value name="Hull" value="2">
        <impl name="vk" value="VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT"/>
      </value>
      <value name="Domain" value="3">
        <impl name="vk" value="VK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT"/>
      </value>
      <value name="Geometry" value="4">
        <impl name="vk" value="VK_SHADER_STAGE_GEOMETRY_BIT"/>
      </value>
      <value name="Pixel" value="5">
        <impl name="vk" value="VK_SHADER_STAGE_FRAGMENT_BIT"/>
      </value>
      <value name="Amplification" value="6">
        <impl name="vk" value="VK_SHADER_STAGE_TASK_BIT_NV"/>
      </value>
      <value name="Mesh" value="7">
        <impl name="vk" value="VK_SHADER_STAGE_MESH_BIT_NV"/>
      </value>
    </type>
    <type name="DescriptorType" category="enum">
      <value name="None" value="0"/>
      <value name="ConstantBuffer" value="2"/>
      <value name="ShaderResource" value="3"/>
      <value name="UnorderedAccess" value="4"/>
    </type>
    <type name="QueuePriority" category="enum">
      <value name="Common" value="0"/>
      <value name="High" value="100"/>
      <value name="Realtime" value="10000"/>
    </type>
    <type name="DeviceFeatures" category="bitmask">
      <value name="None" value="0"/>
      <value name="PushDescriptors" bit="0"/>
    </type>
    <type name="InputClass" category="enum">
      <value name="PerVertex" value="0"/>
      <value name="PerInstance" value="1"/>
    </type>
    <type name="DataFormat" category="enum">
      <impl_type for="dx" name="DXGI_FORMAT" direct="true "/>
      <impl_type for="vk" name="VkFormat"/>
      <value name="Unknown" value="0"/>
      <value name="RGBA32Float" value="2">
        <impl name="vk" value="VK_FORMAT_R32G32B32A32_SFLOAT"/>
      </value>
      <value name="RGBA32Uint" value="3">
        <impl name="vk" value="VK_FORMAT_R32G32B32A32_UINT"/>
      </value>
      <value name="RGBA32Sint" value="4">
        <impl name="vk" value="VK_FORMAT_R32G32B32A32_SINT"/>
      </value>
      <value name="RGB32Float" value="6">
        <impl name="vk" value="VK_FORMAT_R32G32B32_SFLOAT"/>
      </value>
      <value name="RGB32Uint" value="7">
        <impl name="vk" value="VK_FORMAT_R32G32B32_UINT"/>
      </value>
      <value name="RGB32Sint" value="8">
        <impl name="vk" value="VK_FORMAT_R32G32B32_SINT"/>
      </value>
      <value name="RGBA16Float" value="10">
        <impl name="vk" value="VK_FORMAT_R16G16B16A16_SFLOAT"/>
      </value>
      <value name="RGBA16Unorm" value="11">
        <impl name="vk" value="VK_FORMAT_R16G16B16A16_UNORM"/>
      </value>
      <value name="RGBA16Uint" value="12">
        <impl name="vk" value="VK_FORMAT_R16G16B16A16_UINT"/>
      </value>
      <value name="RGBA16Snorm" value="13">
        <impl name="vk" value="VK_FORMAT_R16G16B16A16_SNORM"/>
      </value>
      <value name="RGBA16Sint" value="14">
        <impl name="vk" value="VK_FORMAT_R16G16B16A16_SINT"/>
      </value>
      <value name="RG32Float" value="16">
        <impl name="vk" value="VK_FORMAT_R32G32_SFLOAT"/>
      </value>
      <value name="RG32Uint" value="17">
        <impl name="vk" value="VK_FORMAT_R32G32_UINT"/>
      </value>
      <value name="RG32Sint" value="18">
        <impl name="vk" value="VK_FORMAT_R32G32_SINT"/>
      </value>
      <value name="D32FloatS8Uint" value="20">
        <impl name="vk" value="VK_FORMAT_D32_SFLOAT_S8_UINT"/>
      </value>
      <value name="RGB10A2Unorm" value="24">
        <impl name="vk" value="VK_FORMAT_A2B10G10R10_UNORM_PACK32"/>
      </value>
      <value name="RGB10A2Uint" value="25">
        <impl name="vk" value="VK_FORMAT_A2B10G10R10_UINT_PACK32"/>
      </value>
      <value name="RG11B10Float" value="26">
        <impl name="vk" value="VK_FORMAT_B10G11R11_UFLOAT_PACK32"/>
      </value>
      <value name="RGBA8Unorm" value="28">
        <impl name="vk" value="VK_FORMAT_R8G8B8A8_UNORM"/>
      </value>
      <value name="RGBA8UnormSrgb" value="29">
        <impl name="vk" value="VK_FORMAT_R8G8B8A8_SRGB"/>
      </value>
      <value name="RGBA8Uint" value="30">
        <impl name="vk" value="VK_FORMAT_R8G8B8A8_UINT"/>
      </value>
      <value name="RGBA8Snorm" value="31">
        <impl name="vk" value="VK_FORMAT_R8G8B8A8_SNORM"/>
      </value>
      <value name="RGBA8Sint" value="32">
        <impl name="vk" value="VK_FORMAT_R8G8B8A8_SINT"/>
      </value>
      <value name="RG16Float" value="34">
        <impl name="vk" value="VK_FORMAT_R16G16_SFLOAT"/>
      </value>
      <value name="RG16Unorm" value="35">
        <impl name="vk" value="VK_FORMAT_R16G16_UNORM"/>
      </value>
      <value name="RG16Uint" value="36">
        <impl name="vk" value="VK_FORMAT_R16G16_UINT"/>
      </value>
      <value name="RG16Snorm" value="37">
        <impl name="vk" value="VK_FORMAT_R16G16_SNORM"/>
      </value>
      <value name="RG16Sint" value="38">
        <impl name="vk" value="VK_FORMAT_R16G16_SINT"/>
      </value>
      <value name="D32Float" value="40">
        <impl name="vk" value="VK_FORMAT_D32_SFLOAT"/>
      </value>
      <value name="R32Float" value="41">
        <impl name="vk" value="VK_FORMAT_R32_SFLOAT"/>
      </value>
      <value name="R32Uint" value="42">
        <impl name="vk" value="VK_FORMAT_R32_UINT"/>
      </value>
      <value name="R32Sint" value="43">
        <impl name="vk" value="VK_FORMAT_R32_SINT"/>
      </value>
      <value name="D24UnormS8Uint" value="45">
        <impl name="vk" value="VK_FORMAT_D24_UNORM_S8_UINT"/>
      </value>
      <value name="RG8Unorm" value="49">
        <impl name="vk" value="VK_FORMAT_R8G8_UNORM"/>
      </value>
      <value name="RG8Uint" value="50">
        <impl name="vk" value="VK_FORMAT_R8G8_UINT"/>
      </value>
      <value name="RG8Snorm" value="51">
        <impl name="vk" value="VK_FORMAT_R8G8_SNORM"/>
      </value>
      <value name="RG8Sint" value="52">
        <impl name="vk" value="VK_FORMAT_R8G8_SINT"/>
      </value>
      <value name="R16Float" value="54">
        <impl name="vk" value="VK_FORMAT_R16_SFLOAT"/>
      </value>
      <value name="D16Unorm" value="55">
        <impl name="vk" value="VK_FORMAT_D16_UNORM"/>
      </value>
      <value name="R16Unorm" value="56">
        <impl name="vk" value="VK_FORMAT_R16_UNORM"/>
      </value>
      <value name="R16Uint" value="57">
        <impl name="vk" value="VK_FORMAT_R16_UINT"/>
      </value>
      <value name="R16Snorm" value="58">
        <impl name="vk" value="VK_FORMAT_R16_SNORM"/>
      </value>
      <value name="R16Sint" value="59">
        <impl name="vk" value="VK_FORMAT_R16_SINT"/>
      </value>
      <value name="R8Unorm" value="61">
        <impl name="vk" value="VK_FORMAT_R8_UNORM"/>
      </value>
      <value name="R8Uint" value="62">
        <impl name="vk" value="VK_FORMAT_R8_UINT"/>
      </value>
      <value name="R8Snorm" value="63">
        <impl name="vk" value="VK_FORMAT_R8_SNORM"/>
      </value>
      <value name="R8Sint" value="64">
        <impl name="vk" value="VK_FORMAT_R8_SINT"/>
      </value>
      <value name="RGB9E5UFloat" value="67">
        <impl name="vk" value="VK_FORMAT_E5B9G9R9_UFLOAT_PACK32"/>
      </value>
      <value name="RG8BG8Unorm" value="68">
        <impl name="vk" value="VK_FORMAT_B8G8R8G8_422_UNORM"/>
      </value>
      <value name="GR8GB8Unorm" value="69">
        <impl name="vk" value="VK_FORMAT_G8B8G8R8_422_UNORM"/>
      </value>
      <value name="BC1RGBAUnorm" value="71">
        <impl name="vk" value="VK_FORMAT_BC1_RGBA_UNORM_BLOCK"/>
      </value>
      <value name="BC1RGBAUnormSrgb" value="72">
        <impl name="vk" value="VK_FORMAT_BC1_RGBA_SRGB_BLOCK"/>
      </value>
      <value name="BC2RGBAUnorm" value="74">
        <impl name="vk" value="VK_FORMAT_BC2_UNORM_BLOCK"/>
      </value>
      <value name="BC2RGBAUnormSrgb" value="75">
        <impl name="vk" value="VK_FORMAT_BC2_SRGB_BLOCK"/>
      </value>
      <value name="BC3RGBAUnorm" value="77">
        <impl name="vk" value="VK_FORMAT_BC3_UNORM_BLOCK"/>
      </value>
      <value name="BC3RGBAUnormSrgb" value="78">
        <impl name="vk" value="VK_FORMAT_BC3_SRGB_BLOCK"/>
      </value>
      <value name="BC4RUnorm" value="80">
        <impl name="vk" value="VK_FORMAT_BC4_UNORM_BLOCK"/>
      </value>
      <value name="BC4RSnorm" value="81">
        <impl name="vk" value="VK_FORMAT_BC4_SNORM_BLOCK"/>
      </value>
      <value name="BC5RGUnorm" value="83">
        <impl name="vk" value="VK_FORMAT_BC5_UNORM_BLOCK"/>
      </value>
      <value name="BC5RGSnorm" value="84">
        <impl name="vk" value="VK_FORMAT_BC5_SNORM_BLOCK"/>
      </value>
      <value name="B5R6G5Unorm" value="85">
        <impl name="vk" value="VK_FORMAT_B5G6R5_UNORM_PACK16"/>
      </value>
      <value name="B5G5R5A1Unorm" value="86">
        <impl name="vk" value="VK_FORMAT_B5G5R5A1_UNORM_PACK16"/>
      </value>
      <value name="BGRA8Unorm" value="87">
        <impl name="vk" value="VK_FORMAT_B8G8R8A8_UNORM"/>
      </value>
      <value name="BGRA8UnormSrgb" value="91">
        <impl name="vk" value="VK_FORMAT_B8G8R8A8_SRGB"/>
      </value>
      <value name="BC6HUfloat16" value="95">
        <impl name="vk" value="VK_FORMAT_BC6H_UFLOAT_BLOCK"/>
      </value>
      <value name="BC6HSfloat16" value="96">
        <impl name="vk" value="VK_FORMAT_BC6H_SFLOAT_BLOCK"/>
      </value>
      <value name="BC7RGBAUnorm" value="98">
        <impl name="vk" value="VK_FORMAT_BC7_UNORM_BLOCK"/>
      </value>
      <value name="BC7RGBAUnormSrgb" value="99">
        <impl name="vk" value="VK_FORMAT_BC7_SRGB_BLOCK"/>
      </value>
    </type>
    <type name="FillMode" category="enum">
      <impl_type for="dx" name="D3D12_FILL_MODE" direct="true"/>
      <impl_type for="vk" name="VkPolygonMode"/>
      <value name="Lines" value="2">
        <impl name="vk" value="VK_POLYGON_MODE_LINE"/>
      </value>
      <value name="Solid" value="3">
        <impl name="vk" value="VK_POLYGON_MODE_FILL"/>
      </value>
    </type>
    <type name="CullMode" category="enum">
      <impl_type for="dx" name="D3D12_CULL_MODE" direct="true"/>
      <impl_type for="vk" name="VkCullModeFlags"/>
      <value name="None" value="1">
        <impl name="vk" value="VK_CULL_MODE_NONE"/>
      </value>
      <value name="Front" value="2">
        <impl name="vk" value="VK_CULL_MODE_FRONT_BIT"/>
      </value>
      <value name="Back" value="3">
        <impl name="vk" value="VK_CULL_MODE_BACK_BIT"/>
      </value>
    </type>
    <type name="WindingOrder" category="enum">
      <impl_type for="dx" name="BOOL" direct="true"/>
      <impl_type for="vk" name="VkFrontFace"/>
      <value name="Clockwise" value="0">
        <impl name="vk" value="VK_FRONT_FACE_CLOCKWISE"/>
      </value>
      <value name="CounterClockwise" value="1">
        <impl name="vk" value="VK_FRONT_FACE_COUNTER_CLOCKWISE"/>
      </value>
    </type>
    <type name="SampleRate" category="enum">
      <impl_type for="dx" name="uint32_t" direct="true"/>
      <impl_type for="vk" name="VkSampleCountFlagBits"/>
      <value name="S1" value="1">
        <impl name="vk" value="VK_SAMPLE_COUNT_1_BIT"/>
      </value>
      <value name="S2" value="2">
        <impl name="vk" value="VK_SAMPLE_COUNT_2_BIT"/>
      </value>
      <value name="S4" value="4">
        <impl name="vk" value="VK_SAMPLE_COUNT_4_BIT"/>
      </value>
      <value name="S8" value="8">
        <impl name="vk" value="VK_SAMPLE_COUNT_8_BIT"/>
      </value>
      <value name="S16" value="16">
        <impl name="vk" value="VK_SAMPLE_COUNT_16_BIT"/>
      </value>
    </type>
    <type name="Compare" category="enum">
      <impl_type for="dx" name="D3D12_COMPARISON_FUNC" direct="true"/>
      <impl_type for="vk" name="VkCompareOp"/>
      <value name="Never" value="1">
        <impl name="vk" value="VK_COMPARE_OP_NEVER"/>
      </value>
      <value name="Less" value="2">
        <impl name="vk" value="VK_COMPARE_OP_LESS"/>
      </value>
      <value name="Equal" value="3">
        <impl name="vk" value="VK_COMPARE_OP_EQUAL"/>
      </value>
      <value name="LessEqual" value="4">
        <impl name="vk" value="VK_COMPARE_OP_LESS_OR_EQUAL"/>
      </value>
      <value name="Greater" value="5">
        <impl name="vk" value="VK_COMPARE_OP_GREATER"/>
      </value>
      <value name="NotEqual" value="6">
        <impl name="vk" value="VK_COMPARE_OP_NOT_EQUAL"/>
      </value>
      <value name="GreaterEqual" value="7">
        <impl name="vk" value="VK_COMPARE_OP_GREATER_OR_EQUAL"/>
      </value>
      <value name="Always" value="8">
        <impl name="vk" value="VK_COMPARE_OP_ALWAYS"/>
      </value>
    </type>
    <type name="StencilOp" category="enum">
      <impl_type for="dx" name="D3D12_STENCIL_OP" direct="true"/>
      <impl_type for="vk" name="VkStencilOp"/>
      <value name="Keep" value="1">
        <impl name="vk" value="VK_STENCIL_OP_KEEP"/>
      </value>
      <value name="Zero" value="2">
        <impl name="vk" value="VK_STENCIL_OP_ZERO"/>
      </value>
      <value name="Replace" value="3">
        <impl name="vk" value="VK_STENCIL_OP_REPLACE"/>
      </value>
      <value name="IncClamp" value="4">
        <impl name="vk" value="VK_STENCIL_OP_INCREMENT_AND_CLAMP"/>
      </value>
      <value name="DecClamp" value="5">
        <impl name="vk" value="VK_STENCIL_OP_DECREMENT_AND_CLAMP"/>
      </value>
      <value name="Invert" value="6">
        <impl name="vk" value="VK_STENCIL_OP_INVERT"/>
      </value>
      <value name="IncWrap" value="7">
        <impl name="vk" value="VK_STENCIL_OP_INCREMENT_AND_WRAP"/>
      </value>
      <value name="DecWrap" value="8">
        <impl name="vk" value="VK_STENCIL_OP_DECREMENT_AND_WRAP"/>
      </value>
    </type>



    <!--Views-->
    <type name="FenceView" category="variant" for="Fence">
      <impl name="both">
        <member type="void" name="value" mod="ptr"/>
      </impl>
    </type>
    <type name="ShaderView" category="variant" for="Shader">
      <impl name="dx">
        <member type="void" name="bytecode" mod="ptr"/>
        <member type="u32" name="size_bytes"/>
      </impl>
      <impl name="vk">
        <member type="void" name="value" mod="ptr"/>
      </impl>
    </type>
    <type name="RootSignatureView" category="variant" for="RootSignature">
      <impl name="dx">
        <member type="void" name="value" mod="ptr"/>
      </impl>
      <impl name="vk">
        <member type="void" name="value" mod="ptr"/>
      </impl>
    </type>
    <type name="RenderPassView" category="variant" for="RenderPass">
      <impl name="dx">
        <member type="void" name="value" mod="ptr"/>
      </impl>
      <impl name="vk">
        <member type="void" name="value1" mod="ptr"/>
        <member type="void" name="value2" mod="ptr"/>
      </impl>
    </type>

    <!--Structs-->
    <type name="Result" category="struct">
      <member type="Status" name="status" default="Ok"/>
      <member type="u8string" name="error" mod="ptr" default="nullptr"/>
    </type>
    <type name="Size2D" category="struct">
      <member type="u32" name="width"/>
      <member type="u32" name="height"/>
    </type>
    <type name="AdapterDesc" category="struct" >
      <member type="u8string" name="description" array="256"/>
      <member type="u32" name="vendor_id"/>
      <member type="u32" name="device_id"/>
      <member type="u32" name="subsys_id"/>
      <member type="u32" name="revision"/>
      <member type="u64" name="dedicated_video_memory"/>
      <member type="u64" name="dedicated_system_memory"/>
      <member type="u64" name="shared_system_memory"/>
      <member type="u64" name="adapter_id"/>
      <member type="AdapterFlags" name="flags"/>
    </type>
    <type name="InputSlotDesc" category="struct">
      <member type="u32" name="slot"/>
      <member type="u32" name="stride_bytes"/>
      <member type="InputClass" name="input_class"/>
    </type>
    <type name="InputAttribute" category="struct">
      <member type="u32" name="input_slot"/>
      <member type="u8string" name="semantic_name" mod="ptr"/>
      <member type="u32" name="semantic_index"/>
      <member type="u32" name="location"/>
      <member type="DataFormat" name="format"/>
      <member type="u32" name="offset_bytes"/>
    </type>
    <type name="InputLayout" category="struct">
      <member type="InputSlotDesc" name="slots" mod="ptr"/>
      <member type="u32" name="slot_count" comment="Max number is 16"/>
      <member type="InputAttribute" name="attributes" mod="ptr"/>
      <member type="u32" name="attribute_count"/>
    </type>
    <type name="RasterizerDesc" category="struct">
      <member type="FillMode" name="fill_mode" default="Solid"/>
      <member type="CullMode" name="cull_mode" default="Back"/>
      <member type="WindingOrder" name="front_face" default="Clockwise"/>
      <member type="bool" name="depth_bias_enable" default="false"/>
      <member type="f32" name="depth_bias" default="0.0f"/>
      <member type="f32" name="depth_bias_clamp" default="0.0f"/>
      <member type="f32" name="depth_bias_slope_factor" default="0.0f"/>
      <member type="bool" name="depth_clip_enable" default="true"/>
    </type>
    <type name="SampleDesc" category="struct">
      <member type="SampleRate" name="rate" default="S1"/>
      <member type="f32" name="quality" default="0.0f"/>
      <member type="u32" name="sample_mask" default="0xffffffff"/>
    </type>
    <type name="StencilDesc" category="struct">
      <member type="StencilOp" name="fail_op" default="Keep"/>
      <member type="StencilOp" name="depth_fail_op" default="Keep"/>
      <member type="StencilOp" name="pass_op" default="Keep"/>
      <member type="Compare" name="comparison" default="Always"/>
      <member type="u8" name="read_mask" default="0xff"/>
      <member type="u8" name="write_mask" default="0xff"/>
    </type>
    <type name="DepthStencilDesc" category="struct">
      <member type="bool" name="depth_enable" default="false"/>
      <member type="bool" name="depth_write_enable" default="false"/>
      <member type="Compare" name="depth_comp" default="Less"/>
      <member type="bool" name="stencil_enable" default="false"/>
      <member type="StencilDesc" name="stencil_front" default="{}"/>
      <member type="StencilDesc" name="stencil_back" default="{}"/>
      <member type="bool" name="depth_bound_test" default="false"/>
    </type>

    <type name="RenderPassDesc" category="struct">

    </type>

    <type name="DebugCallback" category="delegate">
      <arg type="Severity" name="severity"/>
      <arg type="u8string" name="message" mod="ptr"/>
      <arg type="void" name="user_data" mod="ptr"/>
    </type>
    <type name="RootConstant" category="struct">
      <member type="ShaderStages" name="stage"/>
      <member type="u32" name="size_bytes"/>
    </type>

    <type name="PushDescriptor" category="struct">
      <member type="ShaderStages" name="stage"/>
      <member type="u32" name="bind_register"/>
      <member type="DescriptorType" name="type"/>
      <member type="u32" name="reserved"/>
    </type>

    <type name="GraphicsShaderStages" category="variant">
      <impl name="both">
        <member type="ShaderView" name="vertex"/>
        <member type="ShaderView" name="hull"/>
        <member type="ShaderView" name="domain"/>
        <member type="ShaderView" name="geometry"/>
        <member type="ShaderView" name="pixel"/>
      </impl>
    </type>
    <type name="GraphicsPipelineDesc" category="variant">
      <impl name="both">
        <member type="RootSignatureView" name="root_signature"/>
        <member type="InputLayout" name="input_layout"/>
        <member type="GraphicsShaderStages" name="shaders"/>
        <member type="RasterizerDesc" name="rasterizer" mod="ptr" default="nullptr"/>
        <member type="SampleDesc" name="sample" mod="ptr" default="nullptr"/>
        <member type="DepthStencilDesc" name="depth_stencil" mod="ptr" default="nullptr"/>
        <member type="RenderPassView" name="render_pass"/>
      </impl>
    </type>
  </types>

  <functions>

    <!--Free functions-->
    <func name="CreateFactory">
      <ret type="Result" name="result"/>
      <ret type="Factory" name="factory"/>
      <arg type="bool" name="debug_layer" default="false"/>
      <arg type="DebugCallback" name="callback" default="nullptr"/>
      <arg type="void" name="user_data" mod="ptr"/>
    </func>
    <func name="CreateDevice">
      <ret type="Result" name="result"/>
      <ret type="Device" name="device"/>
      <arg type="Factory" name="factory"/>
      <arg type="Adapter" name="adapter"/>
    </func>

    <!--Factory-->
    <func for="Factory" name="GetAdapter">
      <ret type="Result" name="result"/>
      <ret type="Adapter" name="adapter"/>
      <arg type="u32" name="index"/>
      <arg type="AdapterPreference" name="preference" default="Performance"/>
    </func>
    <func for="Factory" name="Destroy"/>
    <func for="Adapter" name="GetDesc">
      <ret type="Result" name="result"/>
      <arg type="AdapterDesc" mod="ptr" name="desc"/>
    </func>

    <!--Device-->
    <func for="Device" name="Destroy"/>
    <func for="Device" name="CreateFence">
      <ret type="Result" name="result"/>
      <ret type="Fence" name="fence"/>
      <arg type="u64" name="initial_value" default="0"/>
    </func>
    <func for="Device" name="CreateRootSignature">
      <ret type="Result" name="result"/>
      <ret type="RootSignature" name="root_signature"/>
      <arg type="RootConstant" name="constants" default="nullptr" mod="ptr"/>
      <arg type="u32" name="constants_size" default="0"/>
    </func>
    <func for="Device" name="CreateAllocator">
      <ret type="Result" name="result"/>
      <ret type="ResourceAllocator" name="allocator"/>
    </func>
    <func for="Device" name="CreateCommandQueue">
      <ret type="Result" name="result"/>
      <ret type="CommandQueue" name="queue"/>
      <arg type="QueueType" name="type"/>
      <arg type="QueuePriority" name="priority" default="Common"/>
    </func>
    <func for="Device" name="CreateShader">
      <ret type="Result" name="result"/>
      <ret type="Shader" name="shader"/>
      <arg type="void" name="data" mod="ptr"/>
      <arg type="u32" name="size_bytes"/>
    </func>
    <func for="Device" name="WaitForMultipleFences">
      <ret type="Result" name="result"/>
      <arg type="FenceView" mod="ptr" name="fences"/>
      <arg type="u64" mod="ptr" name="values"/>
      <arg type="u32" name="count"/>
      <arg type="MutiWaitFlags" name="wait_all" default="All"/>
      <arg type="u64" name="timeout" default="18446744073709551615"/>
    </func>

    <!--RootSignature-->
    <func for="RootSignature" name="Destroy"/>

    <!--Fence-->
    <func for="Fence" name="Destroy"/>
    <func for="Fence" name="GetCompletedValue">
      <ret type="u64" name="value"/>
    </func>
    <func for="Fence" name="Wait">
      <ret type="Result" name="result"/>
      <arg type="u64" name="value"/>
      <arg type="u64" name="timeout_ns" default="18446744073709551615"/>
    </func>
    <func for="Fence" name="Signal">
      <ret type="Result" name="result"/>
      <arg type="u64" name="value"/>
    </func>

    <!--ResourceAllocator-->
    <func for="ResourceAllocator" name="Destroy"/>

    <!--CommandQueue-->
    <func for="CommandQueue" name="Destroy"/>

    <!--Shader-->
    <func for="Shader" name="Destroy"/>

    <!--PipelineState-->
    <func for="PipelineState" name="Destroy"/>

    <!--RenderPass-->
    <func for="RenderPass" name="Destroy"/>
  </functions>
</registry>
