name: CMake
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true
  NuGetDirectory: ${{ github.workspace }}/nuget

jobs:    
    #- name: Test
    #  working-directory: ${{github.workspace}}/build_dx
    #  # Execute tests defined by the CMake configuration.
    #  # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
    #  run: ctest -C ${{env.BUILD_TYPE}}
      
  publish:
     #if: ${{ (github.event_name == 'push' && contains(github.event.head_commit.message, '[release]')) || github.event_name == 'workflow_dispatch'  }}
     #needs: [build_vk]
     runs-on: windows-latest

     steps:       
       - uses: actions/checkout@v4
     
       - name: Visual Studio shell
         uses: egor-tensin/vs-shell@v2

       - name: Prepare Vulkan SDK
         uses: humbletim/setup-vulkan-sdk@v1.2.0
         with:
            vulkan-query-version: latest
            vulkan-components: Vulkan-Headers, Vulkan-Loader
            vulkan-use-cache: true

       - name: Setup cmake
         uses: jwlawson/actions-setup-cmake@v2
         with:
           cmake-version: '3.30.x'
       
       - name: Build packages
         run: cd ${{github.workspace}} && .\nuget.bat
        
       - name: Read version
         id: version
         uses: juliangruber/read-file-action@v1
         with:
           path: ${{github.workspace}}/build/release/version.txt
         
       - name: Publish NuGet package
         run: |
            dotnet nuget push ${{github.workspace}}/build/wisdom.${{ steps.version.outputs.content }}.nupkg --api-key "${{ secrets.NUGET_APIKEY }}" --source https://api.nuget.org/v3/index.json --skip-duplicate

       - name: Tag and Release Versioned
         id : tag_release_versioned
         uses : softprops/action-gh-release@v1
         with :
          body: Release ${{ steps.version.outputs.content }}
          tag_name : ${{ steps.version.outputs.content }}
          files : |
              **/Wisdom*.zip
              **/Wisdom*.nupkg

       - name: Delete tag
         run: gh release delete Latest --cleanup-tag
         env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

       - name: Tag and Release Latest
         id : tag_release_latest
         uses : softprops/action-gh-release@v1
         with :
          body: Release ${{ steps.version.outputs.content }}
          tag_name : Latest
          files : |
              **/Wisdom*.zip
              **/Wisdom*.nupkg
              
       
